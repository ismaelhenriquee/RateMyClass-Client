# name: Deploy app
# on:
#   push:
#     branches:
#       - main
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - name: Check if droplet_ip.txt is on the repo
#         run: |
#           if [ ! -s droplet_ip.txt ]; then
#             echo "droplet_ip.txt does not exist or is empty"
#             exit 1
#           fi
#       - name: Get droplet IP
#         run: |
#           DROPLET_IP=$(cat droplet_ip.txt) && echo "DROPLET_IP=$DROPLET_IP" >> $GITHUB_ENV
#       - name: Run cleanup script
#         env:
#           SSH_AUTH_SOCK: /tmp/ssh_agent.sock
#         run: |
#           mkdir -p /home/runner/.ssh
#           echo "${{ secrets.PRIVATE_KEY }}" > /home/runner/.ssh/github_actions
#           chmod 600 /home/runner/.ssh/github_actions
#           ssh-agent -a $SSH_AUTH_SOCK > /dev/null
#           ssh-add /home/runner/.ssh/github_actions
#           ssh -i /home/runner/.ssh/github_actions -o StrictHostKeyChecking=no root@$DROPLET_IP 'bash -s' < .github/cleanup.sh
#       - name: Dokku deploy
#         uses: titi-lima/dokku-github-action@v1
#         env:
#           DATABASE_URL: ${{ secrets.DATABASE_URL }}
#           PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
#           HOST: ${{ env.DROPLET_IP }}
#           PROJECT: app
#           BRANCH: main
#           FORCE_DEPLOY: true
#   migrate:
#     runs-on: ubuntu-latest
#     needs: deploy
#     strategy:
#       matrix:
#         node-version: [20]
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - uses: pnpm/action-setup@v4
#         with:
#           version: 9
#       - name: Run migrations
#         run: pnpm dlx prisma migrate deploy
#         env:
#           DATABASE_URL: ${{ secrets.DATABASE_URL }}
#   sentry:
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Create Sentry release
#         uses: getsentry/action-release@v1
#         env:
#           SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#           SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
#           SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
#         with:
#           environment: production
